//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH_Management.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class PharmacyEntities : DbContext
    {
        public PharmacyEntities()
            : base("name=PharmacyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductCategory> ProductCategories { get; set; }
        public DbSet<PurchaseItem> PurchaseItems { get; set; }
        public DbSet<Rack> Racks { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<prGetProduct_Result> prGetProduct(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prGetProduct_Result>("prGetProduct", typeParameter);
        }
    
        public virtual int prISalesIntem(string productCode, Nullable<decimal> quantity, string unitPrice, string totoalCost, Nullable<decimal> restOfAmount, string userID, Nullable<System.DateTime> creationDate, string optional)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var unitPriceParameter = unitPrice != null ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(string));
    
            var totoalCostParameter = totoalCost != null ?
                new ObjectParameter("TotoalCost", totoalCost) :
                new ObjectParameter("TotoalCost", typeof(string));
    
            var restOfAmountParameter = restOfAmount.HasValue ?
                new ObjectParameter("RestOfAmount", restOfAmount) :
                new ObjectParameter("RestOfAmount", typeof(decimal));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            var optionalParameter = optional != null ?
                new ObjectParameter("Optional", optional) :
                new ObjectParameter("Optional", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prISalesIntem", productCodeParameter, quantityParameter, unitPriceParameter, totoalCostParameter, restOfAmountParameter, userIDParameter, creationDateParameter, optionalParameter);
        }
    
        public virtual ObjectResult<prSalesReport_Result> prSalesReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string productCode)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prSalesReport_Result>("prSalesReport", startDateParameter, endDateParameter, productCodeParameter);
        }
    
        public virtual ObjectResult<prSalesReportDetails_Result> prSalesReportDetails(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string productCode)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prSalesReportDetails_Result>("prSalesReportDetails", startDateParameter, endDateParameter, productCodeParameter);
        }
    
        public virtual int prPurchaseItem(Nullable<int> productCode, Nullable<int> quantity, Nullable<double> unitPrice, Nullable<double> clintPrice, string actionType, string remarks, Nullable<System.DateTime> insertDate, string insertedBy, string invoiceNo)
        {
            var productCodeParameter = productCode.HasValue ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(double));
    
            var clintPriceParameter = clintPrice.HasValue ?
                new ObjectParameter("ClintPrice", clintPrice) :
                new ObjectParameter("ClintPrice", typeof(double));
    
            var actionTypeParameter = actionType != null ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var insertDateParameter = insertDate.HasValue ?
                new ObjectParameter("InsertDate", insertDate) :
                new ObjectParameter("InsertDate", typeof(System.DateTime));
    
            var insertedByParameter = insertedBy != null ?
                new ObjectParameter("InsertedBy", insertedBy) :
                new ObjectParameter("InsertedBy", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prPurchaseItem", productCodeParameter, quantityParameter, unitPriceParameter, clintPriceParameter, actionTypeParameter, remarksParameter, insertDateParameter, insertedByParameter, invoiceNoParameter);
        }
    
        public virtual ObjectResult<prSalesProduct_Result> prSalesProduct(string productCode, string type)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prSalesProduct_Result>("prSalesProduct", productCodeParameter, typeParameter);
        }
    }
}
